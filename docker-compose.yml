version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: martinis-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
      MYSQL_DATABASE: ${MYSQL_DATABASE:-martinis}
      MYSQL_USER: ${MYSQL_USER:-martinis_user}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-martinis_pass}
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    volumes:
      # Persist MySQL data
      - mysql_data:/var/lib/mysql
      # Mount SQL initialization scripts
      - ./sql/martinis.sql:/docker-entrypoint-initdb.d/01-schema.sql:ro
      - ./sql/martinis_data.sql:/docker-entrypoint-initdb.d/02-data.sql:ro
    networks:
      - martinis-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD:-rootpassword}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    command: --default-authentication-plugin=mysql_native_password

  # Martinis Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: martinis-app
    restart: unless-stopped
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      # Database connection
      DATABASE_URL: jdbc:mysql://mysql:3306/${MYSQL_DATABASE:-martinis}?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
      DB_DRIVER: com.mysql.cj.jdbc.Driver

      # Server configuration
      PORT: ${APP_PORT:-8080}

      # Admin user creation
      ADMIN_USERNAME: ${ADMIN_USERNAME:-admin}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-admin123}
      ADMIN_FIRSTNAME: ${ADMIN_FIRSTNAME:-Admin}
      ADMIN_LASTNAME: ${ADMIN_LASTNAME:-User}

      # SQL initialization
      SQL_INIT_MODE: never  # Schema already initialized by MySQL entrypoint

      # Spring datasource credentials (parsed from DATABASE_URL by DatabaseConfig)
      SPRING_DATASOURCE_USERNAME: ${MYSQL_USER:-martinis_user}
      SPRING_DATASOURCE_PASSWORD: ${MYSQL_PASSWORD:-martinis_pass}
    ports:
      - "${APP_PORT:-8080}:8080"
    networks:
      - martinis-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # phpMyAdmin (optional - for database management)
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: martinis-phpmyadmin
    restart: unless-stopped
    depends_on:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: ${MYSQL_USER:-martinis_user}
      PMA_PASSWORD: ${MYSQL_PASSWORD:-martinis_pass}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-rootpassword}
    ports:
      - "${PHPMYADMIN_PORT:-8081}:80"
    networks:
      - martinis-network
    profiles:
      - tools  # Only starts when explicitly requested with --profile tools

networks:
  martinis-network:
    driver: bridge

volumes:
  mysql_data:
    driver: local
